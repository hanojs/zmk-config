#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define RAISE   1


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* QWERTY
 *   QMK Settings: 
 *              KC_F1,   KC_F2,   KC_F3,   KC_F4, KC_F5, KC_F6,                         KC_F7,       KC_F8, KC_F9,   KC_F10,   KC_F11,  KC_F12,                  \
 *   KC_GRAVE,  KC_1,    KC_2,    KC_3,    KC_4,  KC_5,  KC_NO,                         KC_NO,       KC_6,  KC_7,    KC_8,     KC_9,    KC_0,      KC_MINUS,     \
 *   KC_TAB,    KC_Q,    KC_W,    KC_E,    KC_R,  KC_T,  KC_LBRACKET,                   KC_RBRACKET, KC_Y,  KC_U,    KC_I,     KC_O,    KC_P,      KC_EQUAL,     \
 *   KC_CAPS,   KC_A,    KC_S,    KC_D,    KC_F,  KC_G,                                              KC_H,  KC_J,    KC_K,     KC_L,    KC_SCOLON, KC_QUOTE,     \
 *   KC_LSHIFT, KC_Z,    KC_X,    KC_C,    KC_V,  KC_B,  LUP_TG,                        KC_BSLASH,   KC_N,  KC_M,    KC_COMMA, KC_DOT,  KC_SLASH,  KC_RSHIFT,    \
 *   KC_NO,     KC_LGUI, KC_LALT, KC_NO,   KC_LCTRL,                                                        KC_DOWN, KC_UP,    KC_LEFT, KC_RIGHT,  KC_INS,       \
 *                                                       KC_NO,    KC_NO,      KC_NO,   KC_NO,                                                                   \
 *                                             KC_BSPC,  KC_DEL,   KC_PGUP,    KC_HOME, KC_ENTER,  KC_SPACE,                                                     \
 *                                                                 KC_PGDOWN,  KC_END                                                                            \
 * ),
 */
                        bindings = <
              &kp  F1       &kp  F2       &kp  F3       &kp  F4       &kp  F5       &kp  F6                &kp  F7       &kp  F8       &kp  F9          &kp  F10        &kp  F11      &kp  F12
&kp  GRAVE    &kp  N1       &kp  N2       &kp  N3       &kp  N4       &kp  N5       &kp MINUS              &kp  EQUAL    &kp  N6       &kp  N7          &kp  N8         &kp  N9       &kp  N0           &kp  DEL
&kp  TAB      &kp  Q        &kp  W        &kp  E        &kp  R        &kp  T        &kp  LBKT              &kp  RBKT     &kp  Y        &kp  U           &kp  I          &kp  O        &kp  P            &kp  BSLH
&kp  LSHIFT   &kp  A        &kp  S        &kp  D        &kp  F        &kp  G                                             &kp  H        &kp  J           &kp  K          &kp  L        &kp  SEMI         &kp  ENTER
&kp  CAPS     &kp  Z        &kp  X        &kp  C        &kp  V        &kp  B        &kp  COMMA             &kp  PERIOD   &kp  N        &kp  M           &kp  COMMA      &kp  SLASH    &kp  SINGLE_QUOTE &kp  RSHFT
&kp  LWIN     &none         &kp  LALT     &none         &kp  LCTRL                                                                     &kp  RCTRL       &none           &kp  RALT     &none             &kp  RWIN
                                                                      &kp ESC       &mo RAISE              &mo RAISE     &kp DEL
                                                        &kp SPACE     &kp BSPC      &kp PG_UP              &kp PG_UP     &kp BSPC      &kp SPACE
                                                                                    &kp PG_DN              &kp PG_DN             
                        >;
                };
                raise_layer {
                        bindings = <
        &trans   &trans   &trans   &trans   &trans   &trans                   &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans   &trans                   &trans   &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans   &trans                   &trans   &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans                                   &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans   &trans                   &trans   &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans                                                   &trans   &trans   &trans   &trans    &trans
                                        &trans   &trans                   &trans   &trans
                                       &trans   &trans   &trans      &trans   &trans   &trans
                                                &trans                   &trans             
                        >;
                };
        };
};
